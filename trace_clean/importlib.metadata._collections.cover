    1: import collections
       
       
       # from jaraco.collections 3.3
    2: class FreezableDefaultDict(collections.defaultdict):
    1:     """
           Often it is desirable to prevent the mutation of
           a default dict after its initial construction, such
           as to prevent mutation during iteration.
       
           >>> dd = FreezableDefaultDict(list)
           >>> dd[0].append('1')
           >>> dd.freeze()
           >>> dd[1]
           []
           >>> len(dd)
           1
           """
       
    1:     def __missing__(self, key):
  158:         return getattr(self, '_frozen', super().__missing__)(key)
       
    1:     def freeze(self):
   23:         self._frozen = lambda key: self.default_factory()
       
       
    2: class Pair(collections.namedtuple('Pair', 'name value')):
    2:     @classmethod
    2:     def parse(cls, text):
  153:         return cls(*map(str.strip, text.split("=", 1)))

    1: """
       This is a module for defining private helpers which do not depend on the
       rest of NumPy.
       
       Everything in here must be self-contained so that it can be
       imported anywhere else without creating circular imports.
       If a utility requires the import of NumPy, it probably belongs
       in ``numpy.core``.
       """
       
    1: from ._convertions import asunicode, asbytes
       
       
    1: def set_module(module):
           """Private decorator for overriding __module__ on a function or class.
       
           Example usage::
       
               @set_module('numpy')
               def example():
                   pass
       
               assert example.__module__ == 'numpy'
           """
   81:     def decorator(func):
   81:         if module is not None:
   81:             func.__module__ = module
   81:         return func
   81:     return decorator

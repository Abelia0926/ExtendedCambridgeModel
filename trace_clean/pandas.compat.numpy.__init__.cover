    1: """ support numpy compatibility across versions """
    1: import warnings
       
    1: import numpy as np
       
    1: from pandas.util.version import Version
       
       # numpy versioning
    1: _np_version = np.__version__
    1: _nlv = Version(_np_version)
    1: np_version_lt1p23 = _nlv < Version("1.23")
    1: np_version_gte1p24 = _nlv >= Version("1.24")
    1: np_version_gte1p24p3 = _nlv >= Version("1.24.3")
    1: np_version_gte1p25 = _nlv >= Version("1.25")
    1: np_version_gt2 = _nlv >= Version("2.0.0")
    1: is_numpy_dev = _nlv.dev is not None
    1: _min_numpy_ver = "1.22.4"
       
       
    1: if _nlv < Version(_min_numpy_ver):
           raise ImportError(
               f"this version of pandas is incompatible with numpy < {_min_numpy_ver}\n"
               f"your numpy version is {_np_version}.\n"
               f"Please upgrade numpy to >= {_min_numpy_ver} to use this pandas version"
           )
       
       
    1: np_long: type
    1: np_ulong: type
       
    1: if np_version_gt2:
           try:
               with warnings.catch_warnings():
                   warnings.filterwarnings(
                       "ignore",
                       r".*In the future `np\.long` will be defined as.*",
                       FutureWarning,
                   )
                   np_long = np.long  # type: ignore[attr-defined]
                   np_ulong = np.ulong  # type: ignore[attr-defined]
           except AttributeError:
               np_long = np.int_
               np_ulong = np.uint
       else:
    1:     np_long = np.int_
    1:     np_ulong = np.uint
       
       
    1: __all__ = [
           "np",
           "_np_version",
           "is_numpy_dev",
       ]
